<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    
    <Style x:Key="MainTextStyle" TargetType="TextBox">
        <Setter Property="AcceptsReturn" Value="True"/>
        <Setter Property="AcceptsTab" Value="True"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ResourceKey=NormalBackColor}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Cursor" Value="IBeam"/>
        <Setter Property="Foreground" Value="{DynamicResource ResourceKey=HeavyForeground}"/>
        <Setter Property="Background" Value="{DynamicResource ResourceKey=HeavyBackground}"/>
        <Setter Property="FontWeight" Value="100"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ToolTip}"/>
        <Setter Property="ToolTipService.InitialShowDelay" Value="5000"/>
        <Style.Triggers>
            <Trigger Property="IsReadOnly" Value="True">
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Foreground" Value="{DynamicResource ResourceKey=NormalForeColor}"/>
                <Setter Property="Background" Value="{DynamicResource ResourceKey=LightBackground}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style x:Key="TitleStyle" TargetType="TextBox">
        <Setter Property="Background" Value="{DynamicResource ResourceKey=MidHvBackground}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ResourceKey=LightForeground}"/>
        <Setter Property="BorderThickness" Value="0 0 0 2"/>
        <Setter Property="FontFamily" Value="/JayWpf/Resources/Fonts/#DejaVu Serif"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="FontWeight" Value="100"/>
        <Setter Property="Foreground" Value="{DynamicResource ResourceKey=LightForeground}"/>
        <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ToolTip}"/>
        <Setter Property="ToolTipService.InitialShowDelay" Value="1500"/>
    </Style>
    <Style x:Key="FontSizeStyle" TargetType="TextBox">
        <Setter Property="Background" Value="{DynamicResource ResourceKey=MidHvBackground}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ResourceKey=LightForeground}"/>
        <Setter Property="BorderThickness" Value="0 0 0 2"/>
        <Setter Property="FontFamily" Value="/JayWpf/Resources/Fonts/#DejaVu Sans"/>
        <Setter Property="Foreground" Value="{DynamicResource ResourceKey=LightForeground}"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="FontWeight" Value="100"/>
        <Setter Property="MinWidth" Value="30"/>
        <Setter Property="TextAlignment" Value="Right"/>
        <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ToolTip}"/>
        <Setter Property="ToolTipService.InitialShowDelay" Value="1500"/>
    </Style>
    <Style x:Key="IsMonoSpaceStyle" TargetType="CheckBox">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ToolTip}"/>
        <Setter Property="ToolTipService.InitialShowDelay" Value="1500"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Border x:Name="MonoBorder" BorderThickness="1" Padding="5 0 5 0">
                        <Grid x:Name="MonoGrid">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <TextBlock x:Name="MonoCheckCross" Grid.Column="0" Margin="0"
                                       Text="✗"
                                       FontFamily="/JayWpf/Resources/Fonts/#DejaVu Sans Mono"
                                       FontSize="24"
                                       Foreground="{DynamicResource ResourceKey=NormalForeColor}"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center"/>

                            <Grid Grid.Column="1">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="50*"/>
                                    <RowDefinition Height="50*"/>
                                </Grid.RowDefinitions>
                                <TextBlock x:Name="MonoLine1" Grid.Row="0" Margin="0 0 0 -5"
                                           Text="fixed "
                                           FontFamily="/JayWpf/Resources/Fonts/#DejaVu Sans Mono"
                                           FontSize="11"
                                           Foreground="{DynamicResource ResourceKey=NormalForeColor}"
                                           HorizontalAlignment="Center"
                                           VerticalAlignment="Center"/>
                                <TextBlock x:Name="MonoLine2" Grid.Row="1" Margin="0 -5 0 0"
                                           Text=" WIDTH"
                                           FontFamily="/JayWpf/Resources/Fonts/Fonts/#DejaVu Sans Mono"
                                           FontSize="11"
                                           Foreground="{DynamicResource ResourceKey=NormalForeColor}"
                                           HorizontalAlignment="Center"
                                           VerticalAlignment="Center"/>

                            </Grid>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsChecked" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="MonoBorder" Property="Border.BorderBrush"
                                        Value="{DynamicResource ResourceKey=ActiveBackColor}"/>
                            <Setter TargetName="MonoBorder" Property="Border.Background"
                                        Value="{DynamicResource ResourceKey=MidLtBackground}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsChecked" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="MonoBorder" Property="Border.BorderBrush"
                                        Value="{DynamicResource ResourceKey=NormalBackColor}"/>
                            <Setter TargetName="MonoBorder" Property="Border.Background"
                                        Value="{DynamicResource ResourceKey=MidLtBackground}"/>
                            <Setter TargetName="MonoCheckCross" Property="TextBlock.Opacity"
                                        Value="50"/>
                        </MultiTrigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="MonoCheckCross" Property="TextBlock.Foreground"
                                        Value="{DynamicResource ResourceKey=ActiveForeColor}"/>
                            <Setter TargetName="MonoCheckCross" Property="TextBlock.Text"
                                        Value="✓"/>
                            <Setter TargetName="MonoLine1" Property="TextBlock.Foreground"
                                        Value="{DynamicResource ResourceKey=ActiveForeColor}"/>
                            <Setter TargetName="MonoLine2" Property="TextBlock.Foreground"
                                        Value="{DynamicResource ResourceKey=ActiveForeColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="CharacterCounterStyle" TargetType="TextBlock">
        <Setter Property="Background" Value="{DynamicResource ResourceKey=HeavyBackground}"/>
        <Setter Property="FontFamily" Value="/JayWpf/Resources/Fonts/Fonts/#DejaVu Sans Mono"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Foreground" Value="{DynamicResource ResourceKey=LightForeground}"/>
        <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ToolTip}"/>
        <Setter Property="ToolTipService.InitialShowDelay" Value="1500"/>
    </Style>
    <Style x:Key="CheckBoxStyle" TargetType="CheckBox">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ToolTip}"/>
        <Setter Property="ToolTipService.InitialShowDelay" Value="1500"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock x:Name="CheckIcon" FontSize="20" Text="☐" Foreground="{DynamicResource ResourceKey=NormalForeColor}"/>
                        <TextBlock x:Name="CheckText"
                            FontSize="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FontSize}"
                            Foreground="{DynamicResource ResourceKey=NormalForeColor}"
                            Margin="5 0 0 0"
                            Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Content}"
                            VerticalAlignment="Center"/>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="CheckIcon" Property="TextBlock.Text" Value="☑"/>
                            <Setter TargetName="CheckIcon" Property="TextBlock.Foreground" Value="{DynamicResource ResourceKey=ActiveBackColor}"/>
                            <Setter TargetName="CheckText" Property="TextBlock.Foreground" Value="{DynamicResource ResourceKey=ActiveBackColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
</ResourceDictionary>